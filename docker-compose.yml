services:
  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_BROKER_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true  # Critical for reply topics
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092  # Use service name
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NUM_PARTITIONS=3  # Better for microservices
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 0"]
      interval: 10s
      timeout: 10s
      retries: 12
    networks:
      - marketplace
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - marketplace

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=marketplace
      - PG_HBA_CONF="host all all 0.0.0.0/0 md5\nlocal all all trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - marketplace
    command: [
      "postgres",
      "-c", "listen_addresses=*"
    ]

volumes:
  postgres_data:
networks:
  marketplace:
    driver: bridge